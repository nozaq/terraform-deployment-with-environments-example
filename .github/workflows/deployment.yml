name: "Deployment"

on:
  push:
    branches:
      - "main"

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  plan:
    name: "Plan"
    runs-on: ubuntu-latest
    environment: production-readonly

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color -out=./plan.out

      - name: Upload the plan file
        uses: actions/upload-artifact@v3
        with:
          name: plan.out
          path: ./plan.out
          retention-days: 1

      - name: Write the plan into the job summary
        run: |
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.plan.outputs.stdout }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  apply:
    name: "Apply"
    runs-on: ubuntu-latest
    needs: plan
    environment: production
    concurrency: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download the plan file
        uses: actions/download-artifact@v3
        with:
          name: plan.out

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false -no-color ./plan.out

      - name: Write the plan into the job summary
        run: |
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.apply.outputs.stdout }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
